/*
 * test
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type CallbackEventData struct {

	EventType string `json:"eventType"`

	EventId string `json:"eventId"`

	EventSource string `json:"eventSource"`
}

// AssertCallbackEventDataRequired checks if the required fields are not zero-ed
func AssertCallbackEventDataRequired(obj CallbackEventData) error {
	elements := map[string]interface{}{
		"eventType": obj.EventType,
		"eventId": obj.EventId,
		"eventSource": obj.EventSource,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseCallbackEventDataRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of CallbackEventData (e.g. [][]CallbackEventData), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseCallbackEventDataRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aCallbackEventData, ok := obj.(CallbackEventData)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertCallbackEventDataRequired(aCallbackEventData)
	})
}
